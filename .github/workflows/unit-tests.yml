
name: Unit Tests

on:
  workflow_call:
    inputs:
      os:
        description: "Preferred runner OS"
        required: false
        default: ""
        type: string
      use_xcodebuild:
        description: "Use 'xcodebuild test'; if not, will use 'swift test'"
        required: false
        default: false
        type: boolean
      platforms:
        description: "Paltform destinations to do testing (e.g., 'iOS,watchOS,macOS', default: 'iOS')."
        required: false
        default: "iOS"
        type: string
      scheme:
        description: "The Xcode scheme for testing."
        required: false
        default: ${{ github.event.repository.name }}
        type: string
    secrets:
      token:
        description: "Token secrect"
        required: false

jobs:
  pre-build:
    runs-on: ubuntu-latest
    outputs:
      runner_os: ${{ steps.determine-runner-os.outputs.os }}
      destinations: ${{ steps.determine-destinations.outputs.destinations }}
    steps:
      - name: Determine runner OS for unit tests
        id: determine-runner-os
        run: |
          if [ ${{ inputs.os }} != "" ]; then
            echo "os=${{ inputs.os }}" >> $GITHUB_OUTPUT
          elif [ ${{ inputs.use_xcodebuild }} == true ]; then
            echo "os=macos-latest" >> $GITHUB_OUTPUT
          else
            echo "os=ubuntu-latest" >> $GITHUB_OUTPUT
          fi

      - name: Determine destinations for xcodebuild test
        id: determine-destinations
        run: |
          destinations=""
          if [[ ${{ inputs.platforms }} == *"iOS"* ]]; then
            destinations+="-destination 'platform=iphonesimulator,name=iPhone 14 Pro' "
          fi
          if [[ ${{ inputs.platforms }} == *"watchOS"* ]]; then
            destinations+="-destination 'platform=watchsimulator,name=Apple Watch Series 8 (45mm)' "
          fi
          if [[ ${{ inputs.platforms }} == *"macOS"* ]]; then
            destinations+="-destination platform=macOS"
          fi
          echo "destinations=$destinations" >> $GITHUB_OUTPUT

      - run: echo "Unit tests runner will be on ${{ steps.determine-runner-os.outputs.os }}"

      - run: echo "${{ steps.determine-destinations.outputs.destinations }}"

  unit-tests:
    needs: pre-build
    runs-on: ${{ needs.pre-build.outputs.runner_os }}
    env: 
      token: ${{ secrets.token }}
    steps:
      - run: echo "System is ${{ runner.os }}; Branch is ${{ github.ref }}; Scheme is ${{ inputs.scheme }}"

      - name: Checkout
        uses: actions/checkout@v3

      - name: Run git config without token
        if: env.token == null
        run: git config --global url."https://github.com/".insteadOf "git@github.com:"

      - name: Run git config with token
        if: env.token != null
        run: |
          git config --global url."https://${{ env.token }}@github.com/".insteadOf "git@github.com:"
          git config --global url."https://${{ env.token }}@github.com/".insteadOf "https://github.com/" 

      - name: Setup Xcode
        if: inputs.use_xcodebuild
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: "15.3"

      - name: Run xcodebuild test
        if: inputs.use_xcodebuild
        run: >
          xcodebuild test
          -quiet
          -disable-concurrent-destination-testing
          -scheme ${{ inputs.scheme }}
          ${{ needs.pre-build.outputs.destinations }}

      - name: Run swift test
        if: ${{ inputs.use_xcodebuild == false }}
        run: swift test

